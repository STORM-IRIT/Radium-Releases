name: Compile Radium ecosystem and generate artifacts

on:
  push:
    branches: [ master ]
  repository_dispatch:
    types: [code-update-event]

jobs:
  create_release:
    runs-on: ubuntu-latest 
    
    steps:
     - uses: actions/checkout@v2
     - uses: seanmiddleditch/gha-setup-ninja@master
       
     - name: Compute Release name
       run: echo ::set-env name=release_name::Radium-$(date +%Y.%m.%d)
       
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: ${{ github.ref }}
         release_name: ${{ env.release_name }}
         draft: true
         prerelease: true

     - shell: bash
       run: |
         echo ${{ steps.create_release.outputs.upload_url }} > upload_url.txt

     - name: Save release upload url to step 2
       uses: actions/upload-artifact@v1
       with:
         name: upload_url
         path: upload_url.txt
     
     
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
     - uses: actions/checkout@v2
     
     - name: Load release upload url from step 1
       uses: actions/download-artifact@v1
       with:
          name: upload_url

     - name: Save release upload url as variable
       run: echo ::set-env name=release_url::`cat upload_url/upload_url.txt`

     - name: Compute Release name
       run: echo ::set-env name=release_name::Radium-$(date +%Y.%m.%d)
         
     - name: Add msbuild to PATH
       uses: microsoft/setup-msbuild@v1.0.0
       if: runner.os == 'Windows'
       with:
         vs-version: 16.6

     - name: Cache Qt
       id: cache-qt
       uses: actions/cache@v1
       with:
         path: ../Qt
         key: ${{ runner.os }}-QtCache

     - name: Install Qt
       uses: jurplel/install-qt-action@v2
       with:
         cached: ${{ steps.cache-qt.outputs.cache-hit }}

     - name: Configure Radium
       run: |
         echo "Configuring ${{ env.release_name }}-${{ runner.os }}"
         mkdir -p build/installed && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed -GNinja

     - name: Compile Radium
       run: cd build && cmake --build . --parallel --config Release --target ninja

     - name: Generate zip files
       run: |
         cd build/ && mv installed ${{ env.release_name }}-${{ runner.os }} &&  zip -r ../${{ env.release_name }}-${{ runner.os }}.zip ${{ env.release_name }}-${{ runner.os }}

     - name: Upload Release Asset
       id: upload-release-asset
       uses: actions/upload-release-asset@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ env.release_url }}
         asset_path: ./${{ env.release_name }}-${{ runner.os }}.zip
         asset_name: ${{ env.release_name }}-${{ runner.os }}.zip
         asset_content_type: application/zip
